name: Build and Deploy Documentation

on:
  push:
    branches: 
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: 
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 전체 히스토리 가져오기 (git-revision-date-localized 플러그인용)

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements-docs.txt

    - name: Configure Git for mike
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Build documentation
      run: |
        # 문서 빌드
        mkdocs build --strict --verbose
        
        # 빌드 결과 확인
        echo "Built files:"
        find site/ -type f -name "*.html" | head -10

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: github.event_name != 'pull_request'

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      if: github.event_name != 'pull_request'
      with:
        path: ./site

  # Deployment job (only for pushes to main)
  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 링크 검사 (선택사항)
  link-check:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements-docs.txt
        npm install -g markdown-link-check

    - name: Build documentation
      run: mkdocs build --strict

    - name: Check internal links
      run: |
        echo "Checking internal links..."
        find docs/ -name "*.md" -exec markdown-link-check {} \;

    - name: Check external links
      continue-on-error: true  # 외부 링크 오류는 무시
      run: |
        echo "Checking external links..."
        find site/ -name "*.html" -exec htmlproofer {} --check-external-hash --check-html --disable-external \;

  # 문서 품질 검사
  quality-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements-docs.txt

    - name: Lint markdown files
      run: |
        # markdownlint 설치 및 실행
        npm install -g markdownlint-cli
        markdownlint docs/ --config .markdownlint.json || true

    - name: Check spelling
      run: |
        # cspell 설치 및 실행
        npm install -g cspell
        cspell "docs/**/*.md" --config .cspell.json || true

    - name: Check documentation structure
      run: |
        python scripts/check_docs_structure.py

  # 문서 성능 분석
  performance:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x

    - name: Run Lighthouse CI
      run: |
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # PR에 대한 미리보기 배포 (선택사항)
  preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements-docs.txt

    - name: Build documentation
      run: mkdocs build --strict

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.1
      with:
        publish-dir: './site'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: false
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1

  # 문서 메트릭 수집
  metrics:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Collect documentation metrics
      run: |
        python scripts/collect_docs_metrics.py > docs_metrics.json
        echo "Documentation metrics:"
        cat docs_metrics.json

    - name: Upload metrics
      uses: actions/upload-artifact@v4
      with:
        name: docs-metrics
        path: docs_metrics.json
        retention-days: 30